window.SIDEBAR_ITEMS = {"enum":[["AuthoritysOriginId",""],["DataProviderId",""],["ReserveIdentifier",""]],"fn":[["convert_decimals_from_evm","Convert decimal from EVM(18) to native(KAR/ACA 12)."],["convert_decimals_to_evm","Convert decimal from native(KAR/ACA 12) to EVM(18)."],["to_bytes","Convert any type that implements Into into byte representation ([u8, 32])"]],"macro":[["define_combined_task",""],["mock_handler",""]],"mod":[["bonding",""],["currency",""],["custom_call",""],["evm",""],["nft",""],["notification_info",""],["permission_capture",""],["task",""],["testing",""],["transfer_protect",""]],"struct":[["Position",""],["TradingPair",""],["UncheckedExtrinsic","Opaque, encoded, unchecked extrinsic. Simple blob to hold an extrinsic without committing to its format and ensure it is serialized correctly."]],"type":[["AccountId","Alias to the opaque account ID type for this chain, actually a `AccountId32`. This is always 32 bytes."],["AccountIndex","The type for looking up accounts. We don’t expect more than 4 billion of them."],["AccountPublic","Alias to the public key used for this chain, actually a `MultiSigner`. Like the signature, this also isn’t a fixed size when encoded, as different cryptos have different size public keys."],["Address","The address format for describing accounts."],["Amount","Signed version of Balance"],["AuctionId","Auction ID"],["Balance","Balance of an account."],["Block","Block type."],["BlockId","Block ID."],["BlockNumber","An index to a block."],["CashYieldIndex",""],["EraIndex","Counter for the number of eras that have passed."],["Hash","A hash of some data used by the chain."],["Header","Header type."],["Index","Index of a transaction in the chain."],["Moment","An instant or duration in time."],["Multiplier","Fee multiplier."],["Nonce","Index of a transaction in the chain. 32-bit should be plenty."],["Share","Share type"],["Signature","Alias to 512-bit hash when used in the context of a transaction signature on the chain."]]};